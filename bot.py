import os
import random
import requests
import time
import json
from config import TOKEN

API_URL = f"https://api.telegram.org/bot{TOKEN}/"
card_back_image_path = "card_back.png"  # –ü—É—Ç—å –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é
cards_directory = "cards"  # –ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏

def get_updates(offset=None):
    url = API_URL + "getUpdates"
    params = {"timeout": 100, "offset": offset}
    response = requests.get(url, params=params)
    return response.json()

def send_message(chat_id, text, reply_markup=None):
    url = API_URL + "sendMessage"
    params = {"chat_id": chat_id, "text": text}
    if reply_markup:
        params['reply_markup'] = json.dumps(reply_markup)  # –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –≤ JSON
    print(f'sending message {params} to {url}')
    response = requests.post(url, json=params)
    if not response.ok:
        print(f"Error sending message: {response.text}")

def send_photo(chat_id, photo_path, caption=None, reply_markup=None):
    url = API_URL + "sendPhoto"
    with open(photo_path, "rb") as photo:
        params = {"chat_id": chat_id, "caption": caption}
        if reply_markup:
            params['reply_markup'] = json.dumps(reply_markup)  # –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –≤ JSON
        files = {"photo": photo}
        response = requests.post(url, data=params, files=files)
        print(response.json())

def send_photo_with_button(chat_id, caption):
    url = API_URL + "sendPhoto"
    print(f'sending photo to {url}')
    
    reply_markup = {
        "inline_keyboard": [
            [{"text": "–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç—É", "callback_data": "flip_card"}]
        ]
    }
    
    with open(card_back_image_path, "rb") as photo:
        params = {
            "chat_id": chat_id,
            "caption": caption,
            "reply_markup": json.dumps(reply_markup)  # –°–µ—Ä–∏–∞–ª–∏–∑—É–µ–º –≤ JSON
        }
        files = {"photo": photo}
        response = requests.post(url, data=params, files=files)
        print(response.json())

def get_random_card_image():
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ cards
    all_images = [f for f in os.listdir(cards_directory) if f.endswith(('.png', '.jpg', '.jpeg'))]
    if not all_images:
        return None
    random_image = random.choice(all_images)  # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    return os.path.join(cards_directory, random_image)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å

def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    offset = None

    while True:
        updates = get_updates(offset)
        if updates.get("ok"):
            for update in updates.get("result", []):
                offset = update["update_id"] + 1
                if "message" in update:
                    chat_id = update["message"]["chat"]["id"]
                    text = update["message"].get("text", "").strip().lower()

                    if text == "/start":
                        print(f"{chat_id} requested welcome message")
                        welcome_message = ("–û, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –∏—Å–∫–∞—Ç–µ–ª—å —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–∞–π–Ω! üîÆ\n"
                                           "–í –º–æ–∏—Ö —Ç–∞–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä—É–∫–∞—Ö –∫–∞—Ä—Ç—ã IT-—Ç–∞—Ä–æ, –≥–æ—Ç–æ–≤—ã–µ —Ä–∞—Å–∫—Ä—ã—Ç—å —Ç–µ–±–µ –≤–µ–ª–µ–Ω–∏—è —Å—É–¥—å–±—ã –≤ –º–∏—Ä–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π!\n"
                                           "–ü–æ—Å–º–æ—Ç—Ä–∏, —á—Ç–æ —Å—É–¥—å–±–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è —Ç–µ–±—è... ‚ú®\n"
                                           "–ù–∞–∂–º–∏ –Ω–∞ '–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç—É', –∏ —Ç–∞–π–Ω—ã IT-–º–∏—Ä–∞ –ø—Ä–µ–¥—Å—Ç–∞–Ω—É—Ç –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π!\n"
                                           "–ù–æ –ø–æ–º–Ω–∏, —á—Ç–æ –±—É–¥—É—â–µ–µ –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ, –∏ —Ç–æ–ª—å–∫–æ –æ—Ç —Ç–µ–±—è –∑–∞–≤–∏—Å–∏—Ç, –∫–∞–∫ —Ç—ã –≤–æ—Å–ø–æ–ª—å–∑—É–µ—à—å—Å—è –ø–æ–ª—É—á–µ–Ω–Ω–æ–π –º—É–¥—Ä–æ—Å—Ç—å—é! üòâ")
                        send_photo_with_button(chat_id, welcome_message)

                    else:
                        send_message(chat_id, "–Ø –ø–æ–∫–∞ –∑–Ω–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—É '–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å –∫–∞—Ä—Ç—É'.")

                elif "callback_query" in update:
                    callback_data = update["callback_query"]["data"]
                    chat_id = update["callback_query"]["message"]["chat"]["id"]

                    if callback_data in ["flip_card", "get_another_card"]:
                        random_image_path = get_random_card_image()
                        if random_image_path:
                            caption = "–í–æ—Ç —Ç–≤–æ—è –∫–∞—Ä—Ç–∞!"
                            reply_markup = {
                                "inline_keyboard": [
                                    [{"text": "–ü–æ–ª—É—á–∏—Ç—å –µ—â–µ –æ–¥–Ω—É", "callback_data": "get_another_card"}]
                                ]
                            }
                            send_photo(chat_id, random_image_path, caption, reply_markup)
                        else:
                            send_message(chat_id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∫–∞—Ä—Ç.")

        time.sleep(1)

if __name__ == "__main__":
    main()
